# Multi-stage build for production frontend
FROM node:18-alpine AS builder

# Set build arguments
ARG CACHEBUST
ARG REACT_APP_API_URL
ARG REACT_APP_SOCKET_URL
ARG REACT_APP_AI_API_URL
ARG REACT_APP_MONITORING_URL
ARG NODE_ENV=production
ARG BUILD_DATE
ARG VERSION

# Set environment variables for build
ENV NODE_ENV=${NODE_ENV}
ENV REACT_APP_API_URL=${REACT_APP_API_URL}
ENV REACT_APP_SOCKET_URL=${REACT_APP_SOCKET_URL}
ENV REACT_APP_AI_API_URL=${REACT_APP_AI_API_URL}
ENV REACT_APP_MONITORING_URL=${REACT_APP_MONITORING_URL}
ENV REACT_APP_VERSION=${VERSION}
ENV REACT_APP_BUILD_DATE=${BUILD_DATE}
ENV GENERATE_SOURCEMAP=false
ENV INLINE_RUNTIME_CHUNK=false

# Create app directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies needed for build)
RUN npm install --silent --legacy-peer-deps

# Copy source code
COPY . .

# Build the application
RUN CI=false GENERATE_SOURCEMAP=false npm run build

# Production stage with nginx
FROM nginx:1.24-alpine AS production

# Install security updates
RUN apk update && apk upgrade && \
    apk add --no-cache \
    curl \
    wget \
    ca-certificates \
    tzdata && \
    rm -rf /var/cache/apk/*

# Create non-root user for nginx
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S nginx-app -u 1001 -G nginx-app

# Copy built application from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Copy nginx server configuration to the correct location
COPY nginx/nginx.conf /etc/nginx/conf.d/default.conf

# Create health check file
RUN echo '{"status":"healthy","timestamp":"'$(date -Iseconds)'","version":"'${VERSION}'"}' > /usr/share/nginx/html/health.json

# Set proper permissions
RUN chown -R nginx-app:nginx-app /usr/share/nginx/html && \
    chown -R nginx-app:nginx-app /var/cache/nginx && \
    chown -R nginx-app:nginx-app /var/log/nginx && \
    chown -R nginx-app:nginx-app /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown nginx-app:nginx-app /var/run/nginx.pid

# Set security labels
LABEL maintainer="GONXT Technologies <admin@gonxt.tech>"
LABEL version="${VERSION}"
LABEL build-date="${BUILD_DATE}"
LABEL description="Trade AI Platform Frontend - Production"
LABEL security.scan="enabled"

# Switch to non-root user
USER nginx-app

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:80/health.json || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]