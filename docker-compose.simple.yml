services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: tradeai_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: trade_ai_production
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - tradeai_network
    command: mongod --bind_ip_all
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tradeai_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - tradeai_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    container_name: tradeai_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://mongodb:27017/trade_ai_production
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      ENCRYPTION_KEY: your-32-char-encryption-key-here
      SESSION_SECRET: your-session-secret-key-change-this
    ports:
      - "5000:5000"
    networks:
      - tradeai_network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend Web App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: tradeai_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    networks:
      - tradeai_network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  tradeai_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local