# Optimized production backend build
FROM node:18-alpine AS builder

# Set build arguments
ARG NODE_ENV=production
ARG BUILD_DATE
ARG VERSION

# Set environment variables
ENV NODE_ENV=${NODE_ENV}
ENV BUILD_DATE=${BUILD_DATE}
ENV VERSION=${VERSION}

# Create app directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Configure npm for faster installs
RUN npm config set fetch-retry-mintimeout 10000 && \
    npm config set fetch-retry-maxtimeout 60000 && \
    npm config set fetch-retries 3 && \
    npm config set network-timeout 120000 && \
    npm config set audit false && \
    npm config set fund false

# Install only production dependencies
RUN npm ci --only=production --no-audit --no-fund --legacy-peer-deps

# Copy source code
COPY . .

# Production stage
FROM node:18-alpine AS production

# Install security updates and required packages
RUN apk update && apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    wget \
    ca-certificates \
    tzdata && \
    rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S tradeai -u 1001 -G nodejs

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=tradeai:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=tradeai:nodejs /app/package*.json ./
COPY --chown=tradeai:nodejs . .

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/backups /app/.cache && \
    chown -R tradeai:nodejs /app/logs /app/uploads /app/backups /app/.cache

# Create healthcheck script
RUN echo '#!/bin/sh\ncurl -f http://localhost:5000/api/health || exit 1' > /app/healthcheck.js && \
    chmod +x /app/healthcheck.js

# Set security labels
LABEL maintainer="GONXT Technologies <admin@gonxt.tech>"
LABEL version="${VERSION}"
LABEL build-date="${BUILD_DATE}"
LABEL description="Trade AI Platform Backend - Production"
LABEL security.scan="enabled"

# Switch to non-root user
USER tradeai

# Expose port
EXPOSE 5000

# Optimized health check with shorter intervals
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start with the fast server and memory optimization
CMD ["node", "--max-old-space-size=512", "src/server-fast.js"]