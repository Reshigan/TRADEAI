# Optimized Backend Dockerfile for faster builds
FROM node:18-alpine AS base

# Install system dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

WORKDIR /app

# Create non-root user early
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy package files first for better caching
COPY package*.json ./

# Configure npm for faster installs
RUN npm config set fetch-retry-mintimeout 10000 && \
    npm config set fetch-retry-maxtimeout 60000 && \
    npm config set fetch-retries 3 && \
    npm config set network-timeout 120000 && \
    npm config set registry https://registry.npmjs.org/ && \
    npm config set audit false && \
    npm config set fund false

# Install dependencies with optimizations
RUN npm ci --only=production --no-audit --no-fund --legacy-peer-deps

# Copy source code
COPY --chown=nodejs:nodejs . .

# Create necessary directories with proper permissions
RUN mkdir -p uploads logs/security && \
    chown -R nodejs:nodejs uploads logs

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 5000

# Optimized health check with shorter intervals
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:5000/api/health || exit 1

# Start the application with optimizations
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "--max-old-space-size=512", "src/server-simple.js"]