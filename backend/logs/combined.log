{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:25:23"}
{"level":"error","message":"connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (/workspace/trade-ai-final/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/workspace/trade-ai-final/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at async connectDB (/workspace/trade-ai-final/backend/src/config/database.js:12:7)\n    at async initializeDatabase (/workspace/trade-ai-final/backend/src/config/database.js:83:3)\n    at async startServer (/workspace/trade-ai-final/backend/src/server.js:25:5)","timestamp":"2025-09-06 08:25:28"}
{"level":"error","message":"connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (/workspace/trade-ai-final/backend/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/workspace/trade-ai-final/backend/node_modules/mongoose/lib/connection.js:791:11)\n    at async connectDB (/workspace/trade-ai-final/backend/src/config/database.js:12:7)\n    at async initializeDatabase (/workspace/trade-ai-final/backend/src/config/database.js:83:3)\n    at async startServer (/workspace/trade-ai-final/backend/src/server.js:25:5)","timestamp":"2025-09-06 08:25:38"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:47:16"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:47:16"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:47:16"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:47:16"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:47:16"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:47:16"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:47:16"}
{"level":"info","message":"Creating database indexes...","timestamp":"2025-09-06 08:47:16"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:49:20"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"Initializing cache...","timestamp":"2025-09-06 08:49:20"}
{"code":"ERR_INVALID_ARG_TYPE","level":"error","message":"Failed to initialize Redis: The \"original\" argument must be of type function. Received undefined","stack":"TypeError [ERR_INVALID_ARG_TYPE]: The \"original\" argument must be of type function. Received undefined\n    at promisify (node:internal/util:409:3)\n    at CacheService.initialize (/workspace/trade-ai-final/backend/src/services/cacheService.js:43:24)\n    at initializeCache (/workspace/trade-ai-final/backend/src/services/cacheService.js:304:22)\n    at startServer (/workspace/trade-ai-final/backend/src/server.js:29:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"Initializing background jobs...","timestamp":"2025-09-06 08:49:20"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:51:00"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:51:00"}
{"level":"info","message":"::1 - - [06/Sep/2025:08:51:23 +0000] \"GET /api/health HTTP/1.1\" 200 105 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/136.0.7103.25 Safari/537.36\"","timestamp":"2025-09-06 08:51:23"}
{"level":"error","message":"Operation `users.findOne()` buffering timed out after 10000ms","request":{"ip":"::1","method":"POST","url":"/api/auth/login"},"stack":"MongooseError: Operation `users.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/workspace/trade-ai-final/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:581:17)\n    at process.processTimers (node:internal/timers:519:7)","timestamp":"2025-09-06 08:53:38"}
{"level":"info","message":"::1 - - [06/Sep/2025:08:53:38 +0000] \"POST /api/auth/login HTTP/1.1\" 500 451 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/136.0.7103.25 Safari/537.36\"","timestamp":"2025-09-06 08:53:38"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:54:45"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:54:45"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:55:03"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:55:03"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:55:33"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:55:33"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:56:15"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:56:15"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:56:30"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:56:30"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:56:58"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:56:58"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:57:13"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:57:13"}
{"level":"info","message":"::1 - - [06/Sep/2025:08:57:50 +0000] \"GET /api/health HTTP/1.1\" 200 105 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 08:57:50"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 08:58:40"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 08:58:40"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 08:58:40"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:01:00.743Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:01:00 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:01:00"}
{"level":"error","message":"Invalid login credentials","request":{"ip":"::1","method":"POST","url":"/api/auth/login"},"stack":"Error: Invalid login credentials\n    at Object.findByCredentials (/workspace/trade-ai-final/backend/src/services/mockDatabase.js:227:13)\n    at async /workspace/trade-ai-final/backend/src/controllers/authController.js:130:16","timestamp":"2025-09-06 09:02:51"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:02:51 +0000] \"POST /api/auth/login HTTP/1.1\" 500 315 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:02:51"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 09:03:41"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 09:03:41"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 09:04:13"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 09:04:13"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 09:04:13"}
{"level":"error","message":"user.save is not a function","request":{"ip":"::1","method":"POST","url":"/api/auth/login"},"stack":"TypeError: user.save is not a function\n    at /workspace/trade-ai-final/backend/src/controllers/authController.js:156:14","timestamp":"2025-09-06 09:04:53"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:04:53 +0000] \"POST /api/auth/login HTTP/1.1\" 500 212 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:04:53"}
{"level":"error","message":"user.save is not a function","request":{"ip":"::1","method":"POST","url":"/api/auth/login"},"stack":"TypeError: user.save is not a function\n    at /workspace/trade-ai-final/backend/src/controllers/authController.js:156:14","timestamp":"2025-09-06 09:05:05"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:05:05 +0000] \"POST /api/auth/login HTTP/1.1\" 500 212 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:05:05"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 09:05:20"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 09:05:20"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 09:05:20"}
{"action":"user_login","email":"admin@tradeai.com","ip":"::1","level":"info","message":"Audit Log","timestamp":"2025-09-06T09:05:26.685Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:05:26 +0000] \"POST /api/auth/login HTTP/1.1\" 200 641 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:05:26"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:29:32.410Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:29:32 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:29:32"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:29:54.893Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:29:54 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:29:54"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 09:54:01"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 09:54:01"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:54:31 +0000] \"GET /api/health HTTP/1.1\" 200 105 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:54:31"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:54:31.181Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:54:31 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:54:31"}
{"action":"user_login","email":"admin@tradeai.com","ip":"::1","level":"info","message":"Audit Log","timestamp":"2025-09-06T09:54:31.313Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:54:31 +0000] \"POST /api/auth/login HTTP/1.1\" 200 641 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:54:31"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:54:31"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:54:31 +0000] \"GET /api/promotions HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:54:31"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:54:31 +0000] \"GET /api/dashboards/executive HTTP/1.1\" 404 48 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:54:31"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:56:07.775Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:56:07 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:56:07"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:56:07"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:56:07 +0000] \"GET /api/promotions HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:56:07"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:56:07"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:56:07 +0000] \"GET /api/budgets HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:56:07"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:56:07 +0000] \"GET /api/trade-spends HTTP/1.1\" 404 48 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:56:07"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:56:07"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:56:07 +0000] \"GET /api/campaigns HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:56:07"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 09:56:21"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 09:56:21"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 09:56:21"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:57:17.429Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:57:17 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:57:17"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:57:17"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:57:17 +0000] \"GET /api/promotions HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:57:17"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:57:17"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:57:17 +0000] \"GET /api/budgets HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:57:17"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:57:17"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:57:17 +0000] \"GET /api/campaigns HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:57:17"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:57:17 +0000] \"GET /api/dashboards/executive HTTP/1.1\" 404 48 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:57:17"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:57:17"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:57:17 +0000] \"GET /api/users/profile HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:57:17"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:57:17"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:57:17 +0000] \"POST /api/promotions HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:57:17"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 09:58:08"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 09:58:08"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 09:58:08"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:58:27.257Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:58:27 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:58:27"}
{"level":"error","message":"Authentication error: User.findById(...).select is not a function","stack":"TypeError: User.findById(...).select is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:23:8)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:659:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async /workspace/trade-ai-final/backend/node_modules/express-rate-limit/dist/index.cjs:576:5","timestamp":"2025-09-06 09:58:27"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:58:27 +0000] \"GET /api/promotions HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:58:27"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 09:59:08"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 09:59:08"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 09:59:08"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T09:59:37.122Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:59:37 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:59:37"}
{"level":"error","message":"Authentication error: user.changedPasswordAfter is not a function","stack":"TypeError: user.changedPasswordAfter is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:56:14)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-09-06 09:59:37"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:59:37 +0000] \"GET /api/promotions HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:59:37"}
{"level":"error","message":"Authentication error: user.changedPasswordAfter is not a function","stack":"TypeError: user.changedPasswordAfter is not a function\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:56:14)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)","timestamp":"2025-09-06 09:59:37"}
{"level":"info","message":"::1 - - [06/Sep/2025:09:59:37 +0000] \"POST /api/promotions HTTP/1.1\" 500 50 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 09:59:37"}
{"level":"info","message":"Initializing database...","timestamp":"2025-09-06 10:00:15"}
{"level":"warn","message":"ðŸš¨ Running in MOCK DATABASE mode - no real database connection","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"To use a real database:","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"1. Install and start MongoDB locally, or","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"2. Use MongoDB Atlas (free tier at mongodb.com/cloud/atlas)","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"3. Update MONGODB_URI in .env file","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"4. Set USE_MOCK_DB=false in .env file","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"Skipping index creation in mock database mode","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"Database initialization complete","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"Skipping cache and background jobs in mock mode","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"Server running on port 5000 in development mode","timestamp":"2025-09-06 10:00:15"}
{"level":"info","message":"API Documentation available at http://localhost:5000/api/docs","timestamp":"2025-09-06 10:00:15"}
{"action":"quick_login","email":"admin@tradeai.com","level":"info","message":"Audit Log","role":"admin","timestamp":"2025-09-06T10:00:42.326Z","userId":"507f1f77bcf86cd799439011"}
{"level":"info","message":"::1 - - [06/Sep/2025:10:00:42 +0000] \"POST /api/auth/quick-login HTTP/1.1\" 200 778 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 10:00:42"}
{"level":"error","message":"req.user.hasPermission is not a function","request":{"ip":"::1","method":"GET","url":"/api/promotions","userId":"507f1f77bcf86cd799439011"},"stack":"TypeError: req.user.hasPermission is not a function\n    at /workspace/trade-ai-final/backend/src/middleware/auth.js:127:19\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/workspace/trade-ai-final/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:65:5)","timestamp":"2025-09-06 10:00:42"}
{"level":"info","message":"::1 - - [06/Sep/2025:10:00:42 +0000] \"GET /api/promotions HTTP/1.1\" 500 - \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 10:00:42"}
{"level":"error","message":"req.user.hasPermission is not a function","request":{"ip":"::1","method":"GET","url":"/api/budgets","userId":"507f1f77bcf86cd799439011"},"stack":"TypeError: req.user.hasPermission is not a function\n    at /workspace/trade-ai-final/backend/src/middleware/auth.js:127:19\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/route.js:149:13)\n    at Route.dispatch (/workspace/trade-ai-final/backend/node_modules/express/lib/router/route.js:119:3)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:284:15\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at Function.handle (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:175:3)\n    at router (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:47:12)\n    at Layer.handle [as handle_request] (/workspace/trade-ai-final/backend/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:328:13)\n    at /workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:286:9\n    at Function.process_params (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:346:12)\n    at next (/workspace/trade-ai-final/backend/node_modules/express/lib/router/index.js:280:10)\n    at authenticateToken (/workspace/trade-ai-final/backend/src/middleware/auth.js:65:5)","timestamp":"2025-09-06 10:00:42"}
{"level":"info","message":"::1 - - [06/Sep/2025:10:00:42 +0000] \"GET /api/budgets HTTP/1.1\" 500 - \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 10:00:42"}
{"level":"error","message":"Operation `campaigns.find()` buffering timed out after 10000ms","request":{"ip":"::1","method":"GET","url":"/api/campaigns","userId":"507f1f77bcf86cd799439011"},"stack":"MongooseError: Operation `campaigns.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/workspace/trade-ai-final/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:581:17)\n    at process.processTimers (node:internal/timers:519:7)","timestamp":"2025-09-06 10:00:52"}
{"level":"info","message":"::1 - - [06/Sep/2025:10:00:52 +0000] \"GET /api/campaigns HTTP/1.1\" 500 453 \"-\" \"python-requests/2.32.3\"","timestamp":"2025-09-06 10:00:52"}
{"level":"info","message":"::ffff:127.0.0.1 - - [06/Sep/2025:10:19:03 +0000] \"GET /api/health HTTP/1.1\" 200 105 \"-\" \"curl/7.88.1\"","timestamp":"2025-09-06 10:19:03"}
