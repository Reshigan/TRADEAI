version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:5-focal
    container_name: trade-ai-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: trade-ai
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - trade-ai-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: trade-ai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - trade-ai-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trade-ai-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/tradeai?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_extremely_secure_and_long_jwt_secret_key_here}
      AI_MODEL_API_KEY: ${AI_MODEL_API_KEY:-your_openai_api_key_here}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - trade-ai-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        CACHEBUST: ${CACHEBUST:-1}
    container_name: trade-ai-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
    depends_on:
      - backend
    networks:
      - trade-ai-network

  # Nginx (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: trade-ai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - trade-ai-network

volumes:
  mongodb_data:
  redis_data:

networks:
  trade-ai-network:
    driver: bridge